// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

const TableNameUser = "user"

// User mapped from table <user>
type User struct {
	UserID      int64   `gorm:"column:user_id;type:int;primaryKey;autoIncrement:true" json:"user_id"`
	UserName    *string `gorm:"column:user_name;type:varchar(255)" json:"user_name"`
	Password    *string `gorm:"column:password;type:varchar(255)" json:"password"`
	IsReal      *int64  `gorm:"column:is_real;type:int(10) unsigned zerofill" json:"is_real"`
	RealName    *string `gorm:"column:real_name;type:varchar(255)" json:"real_name"`
	ViolateTime *int64  `gorm:"column:violate_time;type:int(10) unsigned zerofill" json:"violate_time"`
	Age         *int64  `gorm:"column:age;type:int" json:"age"`
	Profession  *string `gorm:"column:profession;type:varchar(255)" json:"profession"`
	Introduce   *string `gorm:"column:introduce;type:varchar(255)" json:"introduce"`
	State       *string `gorm:"column:state;type:varchar(255)" json:"state"`
	IsAdmin     *int64  `gorm:"column:is_admin;type:int(10) unsigned zerofill" json:"is_admin"`
	Email       *string `gorm:"column:email;type:varchar(255)" json:"email"`
	Telephone   *string `gorm:"column:telephone;type:varchar(255)" json:"telephone"`
	Address     *string `gorm:"column:address;type:varchar(255)" json:"address"`
	RealID      *string `gorm:"column:real_id;type:varchar(255)" json:"real_id"`
}

// TableName User's table name
func (*User) TableName() string {
	return TableNameUser
}
