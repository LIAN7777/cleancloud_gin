// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

const TableNameReportedblog = "reportedblog"

// Reportedblog mapped from table <reportedblog>
type Reportedblog struct {
	RBlogID          int64   `gorm:"column:r_blog_id;type:int;primaryKey;autoIncrement:true" json:"r_blog_id"`
	UserID           int64   `gorm:"column:user_id;type:int;not null" json:"user_id"`
	Content          *string `gorm:"column:content;type:varchar(10000)" json:"content"`
	Title            *string `gorm:"column:title;type:varchar(255)" json:"title"`
	Introduce        *string `gorm:"column:introduce;type:varchar(255)" json:"introduce"`
	Image            *string `gorm:"column:image;type:varchar(255)" json:"image"`
	File             *string `gorm:"column:file;type:varchar(255)" json:"file"`
	Time             *string `gorm:"column:time;type:varchar(255)" json:"time"`
	BlogClass        *string `gorm:"column:blog_class;type:varchar(255)" json:"blog_class"`
	Tag              *string `gorm:"column:tag;type:varchar(255)" json:"tag"`
	ReportReason     *string `gorm:"column:report_reason;type:varchar(255)" json:"report_reason"`
	AiComment        *string `gorm:"column:ai_comment;type:varchar(1000)" json:"ai_comment"`
	AssistantComment *string `gorm:"column:assistant_comment;type:varchar(255)" json:"assistant_comment"`
	Status           *string `gorm:"column:status;type:varchar(255)" json:"status"`
	UserName         *string `gorm:"column:user_name;type:varchar(255)" json:"user_name"`
}

// TableName Reportedblog's table name
func (*Reportedblog) TableName() string {
	return TableNameReportedblog
}
